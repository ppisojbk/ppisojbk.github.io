<?php
/*
 * Cavy Framework
 *
 * (C) 1999-2006 NSFOCUS Corporation. All rights Reserved
 *
 * Information:
 *
 * $Id: IndexController.php,v 1.9 2008/07/07 11:54:07 zhangyunhai Exp $
 *
 */
require_once 'lib/Constant.php';

class IndexController extends Cavy_Controller_Action {

    public $models = 'Menu';

    private $login_user_id = null;

    private $login_user_role = null;

    public function __construct() {
        $this->login_user_id = $_SESSION['login.user']['id'];
        $this->login_user_role = $_SESSION['login.user']['roles'][0];
    }

    /**
     * 定向到框架主页面
     *
     * @return void
     */
    public function index() {
        $config_dom = new DOMDocument();
        $config_dom->load("/opt/nsfocus/etc/sas_f_config.xml");
        
        /* 获取登录超时时间 */
        $sysConfig = Cavy::getModel("SysConfig");
        if (in_array($this->login_user_role, array (
                'audit',
                'auditors' 
        ))) {
            $rstval = $sysConfig->getAuthParamByAudit(2);
            $autologouttime = $rstval['autologinouttime'];
            $pass_timeout_warn = $rstval['pass_timeout_warn'];
        } else {
            $autologouttime = $config_dom->getElementsByTagName(
                    "autologinouttime")->item(0)->getAttribute("second");
            $pass_timeout_warn = $config_dom->getElementsByTagName(
                    "system_audit")->item(0)->getAttribute("pass_timeout_warn");
            $pass_timeout_warn = empty($pass_timeout_warn) ? 5 : $pass_timeout_warn;
        }
        
        /* 登录提醒 */
        $login_reminds = array ();
        /* 磁盘空间检查 */
        if ($this->login_user_role == 'audit' ||
                 $this->login_user_role == 'admin') {
            $diskmanager = $config_dom->getElementsByTagName('diskmanager')->item(
                    0);
            $diskfree_warn = ceil($diskmanager->getAttribute('diskfree')); // 磁盘剩余告警阈值
            $system_resource = file('/tmp/state');
            $sda1_disk = explode('/', $system_resource[3]);
            $diskfree_real = ceil(intval($sda1_disk[1]) / 1024);
            
            if ($diskfree_real <= $diskfree_warn) {
                if ($this->login_user_role == 'audit') {
                    $disk_warn_msg = _('磁盘空间仅剩 ') . $diskfree_real .
                             ' G，<a href="javascript:void(0);" style="text-decoration: underline;" onclick="goto_menu(\\\'' .
                             _('日志管理') . '\\\');">' . _('点击此进入日志备份页面！') . '</a>';
                    
                    array_push($login_reminds, 
                            array (
                                    'style' => REMIND_STYLE_DIALOG,
                                    'type' => REMIND_DISK_WARN,
                                    'title' => _('日志备份提示'),
                                    'url' => '/system/disk/cat/diskWarn/diskfree_real/' .
                                             $diskfree_real . '/diskfree/' .
                                             $diskfree_warn,
                                            'width' => 400,
                                            'height' => 180,
                                            'resize' => 'true' 
                            ));
                } else {
                    $disk_warn_msg = _('磁盘空间仅剩 ') . $diskfree_real . ' G，' .
                             _('请联系审计管理员进行日志备份！');
                    
                    array_push($login_reminds, 
                            array (
                                    'style' => REMIND_STYLE_TIPWARN,
                                    'type' => REMIND_DISK_WARN,
                                    'title' => _('磁盘告警'),
                                    'msg' => $disk_warn_msg 
                            ));
                }
            }
        }
        
        /* 未读消息条数 */
        $unread_messages = Cavy::getModel("Message")->count_unread_message();
        if ($unread_messages['sum'] > 0) {
            if ($unread_messages['title']) {
                /* 仅有一条未读消息时直接显示消息标题 */
                array_push($login_reminds, 
                        array (
                                'style' => REMIND_STYLE_TIPWARN,
                                'type' => REMIND_MESSAGE_UNREAD,
                                'title' => _('未读消息'),
                                'msg' => '<a href="javascript:void(0);" onclick="goto_menu(\\\'' .
                                         _('消息通知') . '\\\');">' .
                                         $this->fixRemindTitle(
                                                $unread_messages['title']) .
                                         '</a>',
                                        'isOnlyOne' => 'true',
                                        'messageBoxId' => $unread_messages['messageBoxId'],
                                        'isRemote' => $unread_messages['isRemote'] 
                        ));
            } else {
                /* 有多条未读消息时仅显示未读消息条数 */
                array_push($login_reminds, 
                        array (
                                'style' => REMIND_STYLE_TIPWARN,
                                'type' => REMIND_MESSAGE_UNREAD,
                                'title' => _('未读消息'),
                                'msg' => _('您有') .
                                         '<a href="javascript:void(0);" onclick="goto_menu(\\\'' .
                                         _('消息通知') . '\\\');">' .
                                         $unread_messages['sum'] . _('条未读消息') .
                                         '</a>',
                                        'isOnlyOne' => 'false' 
                        ));
            }
        }
        
        /* 如果当前是HA备机在运行，并且实时同步功能是开启的，则提示“开启了双机热备的实时同步功能，您当前登录的是备机，修改的配置不会生效，会被主机的配置覆盖，建议操作主机！” */
        $statusInt = Cavy::getModel("HaVrrp")->getHaStatus(); // 判断主备机
        $HaStatus = Cavy::getModel("HaVrrp")->getStatus(); // HA的状态
        $RtStatus = Cavy::getModel("HaVrrp")->getRtsyncStatus(); // 实时同步的状态
        if ($statusInt == 3 && $HaStatus == 'on' && $RtStatus == 'on') {
            $HaFlag = 'has-remind';
        } else {
            $HaFlag = 'no-remind';
        }
        
        $data = array (
                'login_reminds' => $login_reminds,
                'autologouttime' => $autologouttime,
                'pass_timeout_warn' => $pass_timeout_warn,
                'HaFlag' => $HaFlag 
        );
        $this->_render($data, 'index');
    }

    /**
     * 定向到框架title标题
     *
     * @return void
     */
    public function title() {
        $this->_render(null);
    }

    /**
     * 系统语言切换
     *
     * @return void
     */
    public function locale() {
        $locale = escapeshellarg($this->_params['lang']);
        
        if ($locale != "zh_CN" && $locale != "zh_TW" && $locale != "en_US") {
            return;
        }
        
        fwrite(fopen('/opt/nsfocus/etc/language', 'w'), $locale);
        system(
                "/bin/super bzypython /opt/nsfocus/bin/devctl.py language switch " .
                         $locale);
    }

    /**
     * 根据用户角色和用户ID，获取json格式的一、二级菜单
     *
     * @return void
     */
    public function getMenu() {
        $lic_info = $this->Menu->getLicenseInfo();
        if ($lic_info->is_valid()) {
            var_dump("ok1");
            
            $menu_list = $this->Menu->getMenusByRole($this->login_user_role);
            var_dump($menu_list);
            $this->filterMenu($menu_list, $lic_info);
            var_dump($menu_list);
            $menu_json = $this->Menu->getMenusJSON($menu_list, 
                    $this->login_user_id, $this->login_user_role);
            $menu_json = '{name:"SAS H",data:' . $menu_json . '}';
            
            echo $menu_json;
        }
    }

    /**
     * 根据系统证书是否过期来过滤菜单项
     *
     * @return void
     */
    private function filterMenu(&$menu_list, $lic) {
        $system_update_id = $this->Menu->getSystemUpdateId();
        
        if (! $lic->isLicenseValid()) {
            foreach ($menu_list as $id => $item) {
                if (intval($item['id']) == $system_update_id) {
                    unset($menu_list[$id]);
                }
            }
        }
    }

    /**
     * 根据角色和二级父节点的ID，获取json格式的三级菜单
     *
     * @return void
     */
    public function subMenu() {
        $menu_id = $this->_params['id'];
        
        $tabs = $this->Menu->getInsideMenuJSON($menu_id, $this->login_user_role, 
                $this->login_user_id);
        // 根据请求参数，设置孩子节点的URI
        $uri = $_SERVER['REQUEST_URI'];
        $this->setRequsetParams($tabs, $uri);
        
        $tabs = json_encode($tabs, JSON_UNESCAPED_UNICODE);
        $this->_render($tabs, 'tabs');
    }

    /**
     * 从URI中获取自定义参数字符串（ID之后的参数，并设置子节点的自定义参数
     *
     * @return void
     */
    private function setRequsetParams(&$menu, $uri) {
        $uri_params = null;
        
        $findme = "/id/";
        if (strpos($uri, $findme) !== false) {
            $uri_tmp = substr($uri, strpos($uri, $findme) + strlen($findme));
        }
        
        $findme = "/";
        if (strpos($uri_tmp, $findme) !== false) {
            $uri_params = substr($uri_tmp, 
                    strpos($uri_tmp, $findme) + strlen($findme));
        }
        
        if (is_array($menu) && $uri_params) {
            foreach ($menu as &$item) {
                $item['url'] .= '/' . $uri_params;
            }
        }
        
        return;
    }

    /**
     * 输出404保存报错信息
     *
     * @return void
     */
    public function noRoute() {
        header("HTTP/1.0 404 Not Found");
        print("HTTP/1.0 404 Not Found<br/>");
        print "Controller or action not found";
    }

    /**
     * 消息提醒检查
     *
     * @return void
     */
    public function checkRemind() {
        $reminds = array ();
        session_write_close();
        /* 新消息提醒 */
        $new_messages = Cavy::getModel("Message")->count_new_message();
        if ($new_messages['sum'] > 0) {
            if ($new_messages['title']) {
                /* 仅有一条新消息时直接显示消息标题 */
                array_push($reminds, 
                        array (
                                'style' => REMIND_STYLE_TIPWARN,
                                'type' => REMIND_MESSAGE_UNREAD,
                                'title' => _('新消息'),
                                'msg' => '<a href="javascript:void(0);" onclick="goto_menu(\'' .
                                         _('消息通知') . '\');">' .
                                         $this->fixRemindTitle(
                                                $new_messages['title']) . '</a>',
                                        'isOnlyOne' => 'true',
                                        'messageBoxId' => $new_messages['messageBoxId'],
                                        'isRemote' => $new_messages['isRemote'] 
                        ));
            } else {
                /* 有多条新消息时仅显示消息条数 */
                array_push($reminds, 
                        array (
                                'style' => REMIND_STYLE_TIPWARN,
                                'type' => REMIND_MESSAGE_NEW,
                                'title' => _('新消息'),
                                'msg' => _('您有') .
                                         '<a href="javascript:void(0);" onclick="goto_menu(\'' .
                                         _('消息通知') . '\');">' .
                                         $new_messages['sum'] . _('条新消息') .
                                         '</a>',
                                        'isOnlyOne' => 'false' 
                        ));
            }
        }
        
        /* 授权请求提醒 */
        $authorize_users = Cavy::getModel('ListManage')->getAuthorieUsers();
        if (in_array($this->login_user_id, $authorize_users)) {
            $req_num = Cavy::getModel('HomeDevice')->checkRequest();
            if ($req_num > 0) {
                array_push($reminds, 
                        array (
                                'style' => REMIND_STYLE_TIPWARN,
                                'type' => REMIND_AUTHORIZATION,
                                'title' => _('授权请求'),
                                'msg' => _('您有') .
                                         '<a href="javascript:void(0);" onclick="goto_menu(\'' .
                                         _('授权管理') . '\');">' . $req_num .
                                         _('条授权请求') . '</a>' 
                        ));
            }
        }
        
        echo json_encode($reminds);
    }

    /**
     * 提醒标题长度修正，标题太长时用"..."替换
     *
     * @return string
     */
    private function fixRemindTitle($msg) {
        if (mb_strlen($msg, 'UTF-8') > 30) {
            $msg = mb_substr($msg, 0, 30, 'UTF-8') . ' ...';
        }
        return $msg;
    }
}
?>
