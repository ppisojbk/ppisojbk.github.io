<?php

class VirtualSetting extends Cavy_Model
{
    private $db = null;
    private $fileds = array();
    private $local_ip_xml = '/opt/nsfocus/NPAI/config/LOCALADDR';
    private $client_xml = '/opt/nsfocus/NPAI/config/client.xml';
    private $dns_xml = "/opt/nsfocus/etc/resolv.conf";
    private $license_path = "/opt/nsfocus/etc/eoi.agent.lic";
    private $language_path = "/opt/nsfocus/etc/language";
    private $hash_config = "/opt/nsfocus/etc/hash_com";
    const INIT_HASH = "0123-4567-89AB-CDEF";

    public function __construct()
    {
        $this->db = new PDO(Cavy::$ENV['dsn']);
        $this->fileds = array("vm.auth.status","vm.auth.type","vm.auth.proc","vm.auth.error");
        $this->login_usr_id = 1;
    }

    /**
     * 虚拟化堡垒机-从Config表中获取集中授权或云端授权结果
    */
    public function getAuthStatus()
    {
        $sql = "SELECT value FROM config WHERE item=? AND owner=?";
        $stm = $this->db->prepare($sql);
        $params = array($this->fileds[0], $this->login_usr_id);
        $stm->execute($params);
        $vm_auth_status = $stm->fetchColumn();

        return "online";
    }

    public function getAuthType()
    {
        $sql = "SELECT value FROM config WHERE item=? AND owner=?";
        $stm = $this->db->prepare($sql);
        $params = array($this->fileds[1], $this->login_usr_id);
        $stm->execute($params);
        $vm_auth_type = $stm->fetchColumn();

        return "cloud";
    }

    public function getLicensePath()
    {
        return $this->license_path;
    }

    public function getLanguagePath()
    {
        return $this->language_path;
    }

    public function isInitHash()
    {
        $hash = @file_get_contents($this->hash_config);
        $hash = trim($hash);
        if ($hash == self::INIT_HASH) {
            return true;
        }
        return false;
    }

    public function getLocalIp()
    {
        $ip = @file_get_contents($this->local_ip_xml);
        if(empty($ip)){
            return $this->get_local_ip();
        }
        return $ip;
    }

    public function getClientXml()
    {
        $dom = @simplexml_load_file($this->client_xml);
        $ip = '0.0.0.0';

        foreach($dom->broker as $broker){
            $id = $broker['id'];
            if ($id == '1001') {
                $ip = $broker->host;
                break;
            }
        }
        return $ip;
    }

    public function getDns()
    {
        // $dns_arr = file($this->dns_xml);
        $dns_arr = file("/opt/nsfocus/etc/resolv.conf");
        $dns_content = trim($dns_arr[0]);
        $findme = "nameserver";
        $dns_ip = substr($dns_content, strpos($dns_content, $findme)+strlen($findme));
        $dns_ip = trim($dns_ip);
        if ($dns_ip == "0.0.0.0") {
            return "";
        }
        return $dns_ip;
    }


    /**
     * 虚拟化堡垒机-保存虚拟化授权方式：集中授权或云端授权
    */
    public function setVmAuthType($vm_auth_type)
    {
        $sql = "UPDATE config SET value=? WHERE item=? AND owner=?";
        $stm = $this->db->prepare($sql);
        $params = array($vm_auth_type,$this->fileds[1],$this->login_usr_id);
        $stm->execute($params);

        return true;
    }

    public function updateLocalIp($ip)
    {
        $ip = trim($ip);
        @file_put_contents($this->local_ip_xml, $ip);
    }

    public function updateClientXml($host, $node='1001')
    {
        $dom = @simplexml_load_file($this->client_xml);

        foreach($dom->broker as $broker){
            $id = $broker['id'];
            if ($id == $node) {
                $broker->attributes()->inuse="yes";
                $broker->host = $host;
            }
        }
        $dom->asXML($this->client_xml);
    }

    public function updateDns($dns_ip)
    {
        $dns_tmp_conf = "/tmp/".basename($this->dns_xml);
        $dns_ip = str_replace(' ','',$dns_ip);

        if (!$fh = fopen($dns_tmp_conf, w)) {
            return false;
        }
        if ($dns_ip != ""){
            fwrite($fh, "nameserver {$dns_ip}\n");
        }
        fwrite($fh, $this->get_dns($dns_ip));
        fwrite($fh, "\n");
        fclose($fh);

        system("/bin/super bzycp {$dns_tmp_conf} {$this->dns_xml}");
        return true;
    }

    private function get_local_ip() {
        $dom = new DOMDocument();
        $dom->load("/opt/nsfocus/etc/interface.xml");
        $nodes = $dom->getElementsByTagName('root');
        $nodes = $nodes->item(0)->getElementsByTagName('interfaces');
        $nodes = $nodes->item(0)->getElementsByTagName('interface');
        return $nodes->item(0)->getAttribute('ip1');
    }

    private function get_dns($dns_ip){
        $handle = @fopen("/opt/nsfocus/etc/resolv.conf", "r");
        if ($handle) {
            while (($buffer = fgets($handle, 4096)) !== false) {
                if ( strstr($buffer,"nameserver") != FALSE 
                    && strstr($buffer,"0.0.0.0") == FALSE 
                    && strstr($buffer,$dns_ip) == FALSE) {
                    fclose($handle);
                    return $buffer;
                }
            }
            // if (!feof($handle)) {
            //     echo "Error: unexpected fgets() fail\n";
            // }
            fclose($handle);
            return "nameserver 0.0.0.0";
        }        
    }

    public function getProcType()
    {
        $sql = "SELECT value FROM config WHERE item=? AND owner=?";
        $stm = $this->db->prepare($sql);
        $params = array($this->fileds[2], $this->login_usr_id);
        $stm->execute($params);
        $vm_auth_type = $stm->fetchColumn();
        if($vm_auth_type == false){
            return "0";
        }
        return $vm_auth_type;
    }


    /**
     * 虚拟化堡垒机-从Config表中获取集中授权或云端授权错误信息
    */
    public function getAuthError()
    {
        $sql = "SELECT value FROM config WHERE item=? AND owner=?";
        $stm = $this->db->prepare($sql);
        $params = array($this->fileds[3], $this->login_usr_id);
        $stm->execute($params);
        $vm_auth_status = $stm->fetchColumn();
        if ($vm_auth_status == false) {
            return "";
        }

        return $vm_auth_status;
    }

    /**
     * 虚拟化堡垒机-从Config表中清空授权错误的信息
    */
    public function clearAuthError()
    {
        $sql = "UPDATE config SET value = '' WHERE item=? AND owner=?";
        $stm = $this->db->prepare($sql);
        $params = array($this->fileds[3], $this->login_usr_id);
        $stm->execute($params);
        return;
    }
    public function isHaveLicense(){
        if(file_exists("/opt/nsfocus/etc/eoi.agent.lic")){
            return true;
        }
        return false;
    }

}
?>
